<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:ws="http://jax-ws.dev.java.net/spring/core" xmlns:wss="http://jax-ws.dev.java.net/spring/servlet"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
	http://jax-ws.dev.java.net/spring/core http://jax-ws.java.net/spring/core.xsd 
	http://jax-ws.dev.java.net/spring/servlet http://jax-ws.java.net/spring/servlet.xsd">

 	<wss:binding url="/DetailsService">
		<wss:service>
			<ws:service bean="#employeeWS" />
		</wss:service>
	</wss:binding>

	<bean 
		id="employeeWS" 
		class="com.school.employee.ws.EmployeeWSImpl">
	</bean>

	<!--This can be eliminated by using @Autowired and @Repository annotation in EmployeeDAOImpl.-->
	<!-- Also use PersistenceExceptionTranslationPostProcessor for Spring specific exceptions.
		 Refer page 163 Spring in Action 3rd Edition -->
	<bean 
		id="employeeDAO" 
		class="com.school.employee.dao.EmployeeDAOImpl">
		 <property 
		 	name="sessionFactory" 
		 	ref="sessionFactory">
		 </property>
	</bean>
	
	<!-- POJOs can be eliminated by using annotation. -->
	<bean 
		id="employeePOJO" 
		class="com.school.employee.bean.Employee" 
		scope="prototype">
	</bean>
	
	<bean 
		id="credentialsPOJO" 
		class="com.school.employee.bean.LoginCredentials"
		scope="prototype">
	</bean>

	<bean 
		id="contactPOJO" 
		class="com.school.employee.bean.ContactDetails"
		scope="prototype">
	</bean>
	
	<bean 
		id="addressPOJO" 
		class="com.school.employee.bean.Address"
		scope="prototype">
	</bean>

	<bean 
		id="docRecordsPOJO" 
		class="com.school.employee.bean.DocumentRecords"
		scope="prototype">
	</bean>
	
	<bean 
		id="userOTPPOJO" 
		class="com.school.employee.bean.UserOTP"
		scope="prototype">
	</bean>

	<bean 
		id="sodPOJO" 
		class="com.school.employee.bean.StartOfDay"
		scope="prototype">
	</bean>

	<bean 
		id="empAtndncPOJO" 
		class="com.school.employee.bean.EmployeeAttendance"
		scope="prototype">
	</bean>
			
	<bean 
		id="dataSource" 
		class="org.apache.commons.dbcp.BasicDataSource">
		<property 
			name="driverClassName" 
			value="oracle.jdbc.driver.OracleDriver">
		</property>
		<property 
			name="url" 
			value="jdbc:oracle:thin:@homepc:1521:orcl">
		</property>
		<property 
			name="username" 
			value="SCHOOLADMIN">
		</property>
		<property 
			name="password" 
			value="admin_123#">
		</property>
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		
		<property name="dataSource" ref="dataSource"></property>
		
		<property name="mappingResources">
			<list>
				<value>contact.hbm.xml</value>
				<value>employee.hbm.xml</value>
				<value>credentials.hbm.xml</value>
				<value>address.hbm.xml</value>
				<value>document.hbm.xml</value>
				<value>otp.hbm.xml</value>
				<value>sod.hbm.xml</value>
				<value>empAtndnc.hbm.xml</value>
			</list>
		</property>
		
		<property name="hibernateProperties" >
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</prop>
				<!-- <prop key="hibernate.hbm2ddl.auto">create</prop> -->
				<prop key="hibernate.show_sql">true</prop>
				<prop key="format_sql">true</prop>
				<prop key="use_sql_comments">true</prop>
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<!-- <prop key="hibernate.cache.use_query_cache">true</prop> -->
				<prop key="hibernate.cache.region.factory_class" >org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory</prop>
				<prop key="net.sf.ehcache.configurationResourceName" >/ehcache.xml</prop>				
			</props>
		</property>
 	</bean>
	
</beans>
